UI & Utility
	MidnightLoot_OnLoad(self)
	MidnightLoot_Show(self)*
	MidnightLoot_Hide(self)
	MidnightLoot_OnDragStart(self)
	MidnightLoot_OnDragStop(self)
	MidnightLoot_LootIcon_OnEnter(self)
	MidnightLoot_LootButtonClick(self)
	MidnightLoot_EventHandler(self, event, ...)
		"BOSS_KILL"
		"ENCOUNTER_LOOT_RECEIVED"
		"CHAT_MSG_SYSTEM"
		"GROUP_ROSTER_CHANGED"
		"PLAYER_LOGIN"
		"CHAT_MSG_ADDON"
			"NEW_LOOT"
			"UPDATE_LOOT"* what sends this?  Button presses?
			"UPDATE_SPECS"
			"INTENT"
			!!"WINNER"
			"TRADED"*
			!!"ROLLOFF_START"
			!!"ROLL_WARNING"* this is the warning about extra /roll events.
			"ERROR"
	.LoadPlayerName()
	.BossKilled(...)
	.ParseItemLink(link)
	.UpdateSpecs(messageData)
	.UpdateActiveLoot()
	.RemoveLoot(index)
	.SetInstanceID()
	.GetActiveLootIndex()
	.GetFullName(raidIndex)
	.LeaveRaid()
	.CheckGroupStatus()
	
	
Item Detection & Categorization
	.LootDropped(...)
	.AddLoot(itemLink, itemID, owner)
	.UpdateLootItem(itemID, owner, ownerStatus)
	.TestTradeable(itemLink)
	.TestTransmog(item)
	.RequestLootStatus* multiple functions?  need to think this one through

Loot Award Decision
	.NewRoll(player, roll)
	.NewIntent(player, intent)
	.AddResult(player, roll, intent)
	.DetermineWinner(index)
	.RollComplete(itemID, owner)
	.ItemWon(item)*
 
TODO
Error passing to my client for debugging
Loot log architecture
Set disenchanter
Build raid roster data?
Identify Raid lead/ ML LootMaster

Brainstorming
-Display of button information should be handled for all states via .UpdateActiveLoot().  That includes after awards.
-Include a check against the spec data in the determine winner to make sure no buggery occurred client-side with spec options.
